// === AUTH.JS: warp-ready p≈ôihla≈°ovac√≠ modul ===

// ‚ö†Ô∏è Zajistit inicializaci Firebase
if (typeof firebase === 'undefined' || !firebase.apps.length) {
  if (typeof initializeFirebaseApp === 'function') {
    initializeFirebaseApp();
  } else {
    console.error("‚ùå Funkce initializeFirebaseApp() nen√≠ definov√°na.");
  }
}

// ‚úÖ P≈ôihl√°≈°en√≠ p≈ôes Google
function signInWithGoogle() {
  const provider = new firebase.auth.GoogleAuthProvider();
  firebase.auth().signInWithPopup(provider)
    .then(result => {
      console.log("‚úÖ P≈ôihl√°≈°en p≈ôes Google:", result.user.email);
    })
    .catch(error => {
      console.error("‚ùå Chyba p≈ôi p≈ôihl√°≈°en√≠ p≈ôes Google:", error);
    });
}

// ‚úÖ P≈ôihl√°≈°en√≠ p≈ôes e-mail/heslo
function signInWithEmail() {
  const email = document.getElementById("emailInput").value;
  const password = document.getElementById("passwordInput").value;

  firebase.auth().signInWithEmailAndPassword(email, password)
    .then(userCredential => {
      console.log("‚úÖ P≈ôihl√°≈°en e-mailem:", userCredential.user.email);
    })
    .catch(error => {
      console.error("‚ùå Chyba p≈ôi p≈ôihl√°≈°en√≠ e-mailem:", error);
    });
}

// ‚úÖ Odhl√°≈°en√≠
function signOut() {
  firebase.auth().signOut()
    .then(() => {
      console.log("üëã U≈æivatel byl odhl√°≈°en.");
    })
    .catch(error => {
      console.error("‚ùå Chyba p≈ôi odhl√°≈°en√≠:", error);
    });
}

// ‚úÖ Zmƒõna UI p≈ôi zmƒõnƒõ stavu p≈ôihl√°≈°en√≠
firebase.auth().onAuthStateChanged(user => {
  const loginSection = document.getElementById("login-section");
  const dashboardSection = document.getElementById("dashboard-section");
  const userNameSpan = document.getElementById("user-name");
  const loginPanel = document.getElementById("loginPanel");
  const userPanel = document.getElementById("userPanel");
  const userEmail = document.getElementById("userEmail");

  if (user) {
    console.log("üü¢ P≈ôihl√°≈°en jako:", user.email);

    // Spr√°va hlavn√≠ch UI panel≈Ø
    if (loginSection && dashboardSection && userNameSpan) {
      loginSection.style.display = "none";
      dashboardSection.style.display = "block";
      userNameSpan.textContent = user.displayName || user.email;
    }

    // Spr√°va alternativn√≠ch UI panel≈Ø
    if (loginPanel && userPanel && userEmail) {
      loginPanel.style.display = "none";
      userPanel.style.display = "block";
      userEmail.textContent = user.email;
    }

  } else {
    console.log("üî¥ U≈æivatel odhl√°≈°en.");

    if (loginSection && dashboardSection && userNameSpan) {
      loginSection.style.display = "block";
      dashboardSection.style.display = "none";
      userNameSpan.textContent = "";
    }

    if (loginPanel && userPanel && userEmail) {
      loginPanel.style.display = "block";
      userPanel.style.display = "none";
      userEmail.textContent = "";
    }
  }
});

// ‚úÖ Odhl√°≈°en√≠ ‚Äì inicializace po naƒçten√≠ DOM
document.addEventListener("DOMContentLoaded", () => {
  const logoutBtn = document.getElementById("logout-button");
  if (logoutBtn) {
    logoutBtn.addEventListener("click", signOut);
  } else {
    console.warn("‚ö†Ô∏è logout-button nen√≠ v DOM.");
  }
});
document.addEventListener("DOMContentLoaded", () => {
  const googleBtn = document.getElementById("google-login-button");
  const emailBtn = document.getElementById("login-button");
  const logoutBtn = document.getElementById("logout-button");

  if (googleBtn) {
    googleBtn.addEventListener("click", signInWithGoogle);
  } else {
    console.warn("‚ö†Ô∏è google-login-button nenalezen.");
  }

  if (emailBtn) {
    emailBtn.addEventListener("click", signInWithEmail);
  }

  if (logoutBtn) {
    logoutBtn.addEventListener("click", signOut);
  }
});
